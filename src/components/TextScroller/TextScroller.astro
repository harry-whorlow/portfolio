<div>
  <div class="rail" id="big">
    <h1 class="big-text">PART TIME DEVELOPER</h1>
    <h1 class="big-text">&</h1>
    <h1 class="big-text">FULL TIME PROCRASTINATOR</h1>
    <h1 class="big-text">-</h1>
    <h1 class="big-text">OCCASIONALLY PRESENT</h1>
    <h1 class="big-text">// &nbsp</h1>
  </div>

  <div class="rail" id="small">
    <h1 class="small-text">Python</h1>
    <h1 class="small-text">-</h1>
    <h1 class="small-text">JavaScript</h1>
    <h1 class="small-text">-</h1>
    <h1 class="small-text">Go Lang</h1>
    <h1 class="small-text">-</h1>
    <h1 class="small-text">TypeScript</h1>
    <h1 class="small-text">-</h1>
    <h1 class="small-text">Python</h1>
    <h1 class="small-text">-</h1>
    <h1 class="small-text">JavaScript</h1>
    <h1 class="small-text">-</h1>
    <h1 class="small-text">Go Lang</h1>
    <h1 class="small-text">-</h1>
    <h1 class="small-text">TypeScript</h1>
    <h1 class="small-text">- &nbsp</h1>
  </div>
</div>

<style>
  .big-text {
    font-size: 100px;
    font-weight: 400;
  }

  .small-text {
    font-size: 40px;
    font-weight: 400;
  }

  h1 {
    font-family: neuemachina;

    white-space: nowrap;

    letter-spacing: ls(120);
    line-height: 1em;

    margin-right: 2.5rem;

    color: var(--main-text-light);

    z-index: 100;
  }

  .rail {
    display: flex;
  }
</style>

<script>
  import gsap from 'gsap';
  import ScrollTrigger from 'gsap/ScrollTrigger';
  gsap.registerPlugin(ScrollTrigger);

  import { horizontalLoop } from '../../utils/textScrollerHelpers';

  const scrollingText = gsap.utils.toArray('#big .big-text');
  const smallScrollingText = gsap.utils.toArray('#small .small-text');

  // big timeline
  const BigTl = horizontalLoop(scrollingText, {
    paused: true,
    repeat: -1,
    speed: 0.5,
  });

  let bigDirection = 1;
  let BigT: GSAPTween;

  ScrollTrigger.create({
    trigger: '#overlay-secondary',
    start: 'top top',
    end: 'bottom top',
    onUpdate: (self) => {
      if (self.direction !== bigDirection) {
        bigDirection = self.direction;
        BigT && BigT.kill();
        BigT = gsap.to(BigTl, {
          duration: 0.3,
          timeScale: self.direction,
        });
      }
    },
  });

  ScrollTrigger.create({
    trigger: '.second-section',
    start: 'top center',
    end: 'bottom bottom',
    onEnter: () => BigTl.play(),
    onLeave: () => BigTl.paused(),
  });

  //small timeline
  const smallTl = horizontalLoop(smallScrollingText, {
    repeat: -1,
    speed: 1,
    reversed: true,
  });

  let smallDirection = -1;
  let smallT: GSAPTween;

  ScrollTrigger.create({
    trigger: '#overlay-secondary',
    start: 'top top',
    end: 'bottom top',
    onUpdate: (self) => {
      if (self.direction !== smallDirection) {
        smallDirection = self.direction;
        smallT && smallT.kill();
        smallT = gsap.to(smallTl, {
          duration: 0.3,
          timeScale: self.direction * -1,
        });
      }
    },
  });
</script>
